worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;

    # Spring Boot 컨테이너 연결 설정
    upstream spring_app {
        server backend:8080;  # Docker Compose에서 정의한 백엔드 컨테이너 이름과 포트
    }

    # HTTP 요청을 HTTPS로 강제 리디렉션 (WebSocket 제외)
    server {
        listen 80;
        server_name ssafy-gagu.site www.ssafy-gagu.site;

        #  WebSocket 요청은 HTTP에서도 예외 처리 (리디렉션 방지)
        location /ws/ {
            proxy_pass http://spring_app/ws;  # /ws 중복 방지
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto http;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS 서버 설정 (WebSocket 포함)
    server {
        listen 443 ssl;
        server_name ssafy-gagu.site www.ssafy-gagu.site;

        ssl_certificate /etc/letsencrypt/live/ssafy-gagu.site/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/ssafy-gagu.site/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        #  WebSocket 요청을 HTTPS에서 처리
        location /ws/ {
            proxy_pass http://spring_app/ws;  # /ws 중복 방지
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade, Keep-Alive"; # Keep-Alive 추가
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }

        #  백엔드(Spring Boot)로 API 요청 전달
        location /api/ {
            proxy_pass http://spring_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }

        #  Vue 정적 파일 제공
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri /index.html;
        }
    }

}
