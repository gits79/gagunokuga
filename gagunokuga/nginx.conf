worker_processes auto; 

# 이벤트 블록 없으면 에러 발생
events {
    worker_connections 1024;  # 각 워커 프로세스가 동시에 처리할 수 있는 최대 연결 수 (성능 조절)
}

http {
    # 프론트 관련 설정
    include       mime.types;  
    default_type  application/octet-stream; 
    sendfile      on;  
    keepalive_timeout 65;  

    # 백엔드(Spring Boot) 컨테이너로 연결할 upstream 설정 (올바르게 닫음)
    upstream spring_app {
        server backend:8080;  # Docker Compose에서 정의한 백엔드 컨테이너의 이름과 포트 
    }

    # HTTP 요청을 HTTPS로 자동 리디렉션
    server {
        listen 80;  # HTTP 포트(80)에서 요청을 받음
        server_name ssafy-gagu.site www.ssafy-gagu.site;  # 처리할 도메인 지정
        return 301 https://$host$request_uri;  # HTTP 요청을 HTTPS로 강제 이동 
    }

    # HTTPS 서버 설정
    server {
        listen 443 ssl;  # HTTPS 요청을 처리하도록 443 포트 활성화
        server_name ssafy-gagu.site www.ssafy-gagu.site;  # SSL 인증서를 사용할 도메인 지정

        # SSL 인증서 경로 및 보안 설정
        ssl_certificate /etc/letsencrypt/live/ssafy-gagu.site/fullchain.pem;  
        ssl_certificate_key /etc/letsencrypt/live/ssafy-gagu.site/privkey.pem; 
        ssl_protocols TLSv1.2 TLSv1.3;  
        ssl_ciphers HIGH:!aNULL:!MD5;  

        # 웹소켓 연결 설정 
        # wss로 요청을 보내기에 https 에만 설정
        location /ws/ {
            proxy_pass http://spring_app/ws;  
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade, Keep-Alive"; # Keep-Alive 추가
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }

        # 백엔드(Spring Boot)로 API 요청 전달
        location /api/ {
            proxy_pass http://spring_app;  # 백엔드 컨테이너로 요청을 전달
            proxy_set_header Host $host;  # 클라이언트의 원래 요청 헤더를 유지
            proxy_set_header X-Real-IP $remote_addr;  # 클라이언트의 실제 IP를 백엔드로 전달
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # 프록시를 거친 IP 주소 추가 (로그 및 보안용)
            proxy_set_header X-Forwarded-Proto https;  # HTTPS로 접근한 경우 이를 백엔드에서 인식할 수 있도록 설정
        }
	
        # Vue 정적 파일 제공
        location / {
            root /usr/share/nginx/html;  # Vue 정적 파일 위치 (Dockerfile에서 `dist` 폴더가 복사됨)
            index index.html;  # 기본 파일 설정 (index.html을 우선 로드)
            try_files $uri /index.html;  # vue 뒤에 # 빼기 위해 설정 SPA 라우팅을 위해 설정 (Vue Router의 history 모드에서 새로고침 시 404 방지)
        }
    }
}
