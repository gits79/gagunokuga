worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile      on;
    keepalive_timeout 65;

    # 스프링 컨테이너 (서비스 이름: backend, 포트: 8080)
    upstream spring_app {
        server backend:8080;
    }

    # Vue 컨테이너 (서비스 이름: frontend, 포트: 80)
    upstream vue_app {
        server frontend:80;
    }

    server {
        listen 80;
        
        # CORS 설정 추가
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
        add_header Access-Control-Expose-Headers "Content-Length,Content-Range";
        add_header Access-Control-Allow-Credentials true;

    

        # /api로 시작하는 요청은 백엔드(Spring Boot) 컨테이너로 프록시
        location /api/ {
            proxy_pass http://spring_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS 설정 (백엔드 API 응답에도 적용)
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
            add_header Access-Control-Expose-Headers "Content-Length,Content-Range";
            add_header Access-Control-Allow-Credentials true;

            
        }

        # 그 외의 요청은 프론트엔드(Vue 컨테이너)로 프록시
        location / {
            proxy_pass http://vue_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
